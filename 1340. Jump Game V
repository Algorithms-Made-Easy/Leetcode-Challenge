class Solution {
    
    int[] dp;
    public int maxJumps(int[] arr, int d) {
        int max = 0;
        dp = new int[arr.length];
        for(int i = 0;i<arr.length;i++){
            max = Math.max(max,helper(arr,d,i));
        }
        
        return max;
    }
    
    private int helper(int[] arr,int d, int index){
        
        if(dp[index]>0){
            return dp[index];
        }
        
        int result = 1;
        //index - 1  ----- index - d
        for(int j = index - 1; j>= Math.max(index - d,0) && arr[index]>arr[j]; j--){
            result = Math.max(result, 1 + helper(arr,d,j));
        }
        
        //index + 1 ------- index + d
        for(int j = index + 1; j<= Math.min(index + d,arr.length-1) && arr[index]>arr[j] ; j++){
            result = Math.max(result, 1 + helper(arr,d,j));
        }
        
        dp[index] = result;
        return result;
    }
}
