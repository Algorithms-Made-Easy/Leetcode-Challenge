class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        //Transpose 
        for(int i = 0; i < n; i++) {
            for(int j = i; j < n; j++) {
                //Swap matrix[i][j] with matrix[j][i]
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        
        //Reverse of rows
        for(int i = 0; i < n; i++) {
            for(int j = 0; j < n/2; j++) {
                //Swap matrix[i][j] with matrix[i][n-j-1]
                int temp = matrix[i][j];
                matrix[i][j] = matrix[i][n-j-1];
                matrix[i][n-j-1] = temp;
            }
        }
        
    }
}

class Solution {
    public void rotate(int[][] matrix) {
        
        int n = matrix.length;
        int layers = n/2;
        
        for(int layer = 0; layer < layers; layer++) {
            int start = layer;
            int end = n-1-layer;
            
            for(int i = start; i < end; i++) {
                
                //top in temp
                int temp = matrix[start][i];
                //left in top
                matrix[start][i] = matrix[n-1-i][start];
                //bottom in left
                matrix[n-1-i][start] = matrix[end][n-1-i];
                //right in bottom
                matrix[end][n-1-i] = matrix[i][end];
                //top in right
                matrix[i][end] = temp;
            }
        }
    }
}
